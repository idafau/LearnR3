---
title: "learning_quandro"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r setup}
#| message: false
#| warning: false

library(tidyverse)
library(NHANES)
nhanes_small <- read_csv(here::here("data/nhance_small.csv"))
```

You can add options to executable code like this

```{r}
nhanes_small
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r mean-age-bmi-table}
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup()
```

## Prettier table

```{r}
#| echo: false
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  mutate(
    # Task 2a.
    mean_age = round(mean_age, 1),
    mean_bmi = round(mean_bmi, 1),
    # Task 2b.
    education = str_to_sentence(education)
  ) %>%
  rename(
    # Task 3.
    "Diabetes Status" = diabetes,
    "Education" = education,
    "Mean Age" = mean_age,
    "Mean BMI" = mean_bmi
  ) %>%
  knitr::kable(caption = "Mean values of Age and BMI for each education and diabetes status.")
```
Cute kitten in @fig-katte

![katte](images/kat.jpg){#fig-katte width="50%" height="50%"}


## Visulizing data

```{r}
# Create histogram for bmi
ggplot(nhanes_small, aes(x = bmi)) +
  geom_histogram()
```
```{r}
# Create histogram for BMI (uden missing)
ggplot(nhanes_small, aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```
Får nu en advarsel mindre


```{r}
nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```

BMI distribution in nhanes dataset neas visulaised in @fig-bmi-histo.

```{r}
#| fig-cap: "Distribution of bmi."
#| label: fig-bmi-histo

nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram(nr.rm = TRUE)
```


```{r}
# creat count barplot for education

ggplot(nhanes_small, aes(x = education)) +
  geom_bar()
```
vi kan ikke fjerne NA på samme måde som før, da de får egen kategori. se nedenfor hvordan man gør

```{r}
# creat count barplot med diabetes
ggplot(nhanes_small, aes(x = diabetes)) +
  geom_bar()
```
Nu vil vi fjerne NA vha filter (! betyder at undtage eller fjerne: 

```{r}
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) +
  geom_bar()
```


og nu for education, også med filter: 
```{r}
nhanes_small %>%
  filter(!is.na(education)) %>%
  ggplot(aes(x = education)) +
  geom_bar()
```

```{r}
#| label: fig-diabetes-education
#| fig-cap: "counts of diabetes and education in NHANES"
#| fig-subcap:
#|   - "Number of those with diabetes and without diabetes"
#|   - "Number of those with different educational status"
#| layout-ncol: 2

nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) +
  geom_bar()

nhanes_small %>%
  filter(!is.na(education)) %>%
  ggplot(aes(x = education)) +
  geom_bar()
```

###PLotter 2 continuous variables
geom hex: erstatter scatter
geom_point: scatter


###Plotting two variables: 
```{r}
ggplot(nhanes_small, aes(x = bmi, y = bp_sys_ave)) +
  geom_hex(na.rm = TRUE)
1
```

vi kan tilføje en regressionslinie, så vi kan se sammenhængen mellem de to:

```{r}
# adding a smoothing line

ggplot(nhanes_small, aes(x = bmi, y = bp_sys_ave)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth(nr.rm = TRUE)
```


##9.4.2 Two discrete variables

```{r}
# Two categorical variables

nhanes_small %>%
  filter(!is.na(education), !is.na(diabetes)) %>%
  ggplot(aes(x = diabetes, fill = education)) +
  geom_bar()
```


```{r}
# two categorical variable, side by side istedet for stacked
# "dodged" bar plot

nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = diabetes, fill = education)) +
  geom_bar(position = position_dodge())
```


### 9.4.3 Discrete and continuous variables

```{r}
# Using mixed data
nhanes_small %>%
  filter(!is.na(diabetes), bmi <= 60) %>%
  ggplot(aes(x = diabetes, y = bmi)) +
  geom_violin(na.rm = TRUE)
```


## Exercise to make plots with one or two variables 9.5
1
```{r}
library(NHANES)
nhanes_exercise <- NHANES %>%
  rename_with(snakecase::to_snake_case) %>%
  rename(sex = gender)
```


```{r}
#| label: fig-age-diabetes-age
#| fig-cap: "Age and age at diabetes diagnosis"
#| fig-subcap:
#|   - "Age"
#|   - "Age at diabetes diagnosis"
#| layout-ncol: 2

# Distribution of age
ggplot(nhanes_exercise, aes(x = age)) +
  geom_histogram(na.rm = TRUE)

# Distribution of age at diabetes diagnosis
ggplot(nhanes_exercise, aes(x = diabetes_age)) +
  geom_histogram(na.rm = TRUE)
```
2) 
With the nhanes_exercise data, use geom_density() to show the distribution of age (participant’s age at collection) and diabetes_age (age of diabetes diagnosis) in two separate, side-by-side plots, but inside one code chunk. Use #| layout-ncol, along with #| label, #| fig-cap and #| fig-subcap, to have the two plots be side by side. Don’t forget to use na.rm = TRUE in the geom.

```{r}
#| label: fig-age-age-diabetes-density
#| fig-cap: age and age diabetes density plot
#| layout-ncol: 2
#| sub-cap:
#|   - "age"
#|   - "age diabetes"

# Distribution of age
ggplot(nhanes_exercise, aes(x = age)) +
  geom_density(na.rm = TRUE)

# Distribution of age at diabetes diagnosis
ggplot(nhanes_exercise, aes(x = diabetes_age)) +
  geom_density(na.rm = TRUE)
```


###Plotting three or more variables

```{r}
# PLot systolic blood pressure in relation to educational status and diabetes.

nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = education, y = bp_sys_ave, colour = diabetes)) +
  geom_boxplot(na.rm = TRUE)
```
## tre continuous data: 

```{r}
# plotting bmi in relation til sys bp and age

nhanes_small %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, color = age)) +
  geom_point(na.rm = TRUE)
```


## two continous and one discreet valiabel

```{r}
# plot bmi to pb sys and diabetes


nhanes_small %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, color = diabetes)) +
  geom_point(na.rm = TRUE)
```

```{r}
# plot bmi in relation til systo bp and diabetes, using faceting by colums

nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave)) +
  geom_point(na.rm = TRUE) +
  facet_grid(cols = vars(diabetes))
```


```{r}
# faceting by row

nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave)) +
  geom_point(na.rm = TRUE) +
  facet_grid(rows = vars(diabetes))
```

```{r}
# plot bmi in realtion to systol bp, diabetes status, educational status, age

nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>% # catagorical data na fjernelse her.
  ggplot(aes(x = bmi, y = bp_sys_ave, colour = age)) +
  geom_point(na.rm = TRUE) +
  facet_grid(
    rows = vars(diabetes),
    col = vars(education)
  )
```
